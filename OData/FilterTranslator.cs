//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FilterTranslator.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class FilterTranslator : Lexer {
	public const int
		OPERATOR=1, FUNCTION=2, UNSUPPORTEDFUNCTION=3, DATETIME_LITERAL=4, WS=5, 
		STRING_LITERAL=6, NUMBER=7, PROPERTY=8, TEXT=9;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"OPERATOR", "FUNCTION", "UNSUPPORTEDFUNCTION", "DATETIME_LITERAL", "WS", 
		"STRING_LITERAL", "NUMBER", "PROPERTY", "TEXT"
	};


	    SqlServerRestApi.TableSpec tableSpec;
		SqlServerRestApi.QuerySpec querySpec;
		int i = 0;
		public FilterTranslator(ICharStream input,
								SqlServerRestApi.TableSpec tableSpec,
								SqlServerRestApi.QuerySpec querySpec): base(input) 
		{
			this.tableSpec = tableSpec;
			this.querySpec = querySpec;
			this.querySpec.parameters = new System.Collections.Generic.LinkedList<System.Data.SqlClient.SqlParameter>();
			_interp = new LexerATNSimulator(this,_ATN);
		}


	public FilterTranslator(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'[_a-zA-Z][_a-zA-Z0-9\".\"]*('"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OPERATOR", "FUNCTION", "UNSUPPORTEDFUNCTION", "DATETIME_LITERAL", 
		"WS", "STRING_LITERAL", "NUMBER", "PROPERTY", "TEXT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FilterTranslator.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 0 : OPERATOR_action(_localctx, actionIndex); break;

		case 1 : FUNCTION_action(_localctx, actionIndex); break;

		case 2 : UNSUPPORTEDFUNCTION_action(_localctx, actionIndex); break;

		case 3 : DATETIME_LITERAL_action(_localctx, actionIndex); break;

		case 5 : STRING_LITERAL_action(_localctx, actionIndex); break;

		case 6 : NUMBER_action(_localctx, actionIndex); break;

		case 7 : PROPERTY_action(_localctx, actionIndex); break;
		}
	}
	private void OPERATOR_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:  Text = "=";  break;

		case 1:  Text = "<>";  break;

		case 2:  Text = ">";  break;

		case 3:  Text = ">=";  break;

		case 4:  Text = "<";  break;

		case 5:  Text = "<=";  break;

		case 6:  Text = "+";  break;

		case 7:  Text = "-";  break;

		case 8:  Text = "*";  break;

		case 9:  Text = "/";  break;

		case 10:  Text = "%";  break;

		case 11:  Text = " AND ";  break;

		case 12:  Text = " OR ";  break;

		case 13:  Text = " NOT ";  break;
		}
	}
	private void FUNCTION_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 14:  Text = "odata.contains(";  break;

		case 15:  Text = "odata.endswith(";  break;

		case 16:  Text = "odata.indexof(";  break;

		case 17:  Text = "len(";  break;

		case 18:  Text = "odata.startswith(";  break;

		case 19:  Text = "lower(";  break;

		case 20:  Text = "lower(";  break;

		case 21:  Text = "TRIM( CHAR(20) FROM ";  break;

		case 22:  Text = "datepart(year,";  break;

		case 23:  Text = "datepart(month,";  break;

		case 24:  Text = "datepart(day,";  break;

		case 25:  Text = "datepart(hour,";  break;

		case 26:  Text = "datepart(minute,";  break;

		case 27:  Text = "datepart(second,";  break;

		case 28:  Text = "json_value(";  break;

		case 29:  Text = "json_query(";  break;

		case 30:  Text = "json_modify(";  break;

		case 31:  Text = "isjson(";  break;
		}
	}
	private void UNSUPPORTEDFUNCTION_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 32: throw new System.ArgumentException("Unsupported function: " + Text); break;
		}
	}
	private void DATETIME_LITERAL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 33:  

				var p = new System.Data.SqlClient.SqlParameter("@p"+i, System.Data.SqlDbType.DateTimeOffset);
				p.Value = System.DateTime.Parse(Text.Substring(9,Text.Length-10));
				this.querySpec.parameters.AddFirst(p);
				Text = "@p"+(i++);

		 break;
		}
	}
	private void STRING_LITERAL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 34:  
				var p = new System.Data.SqlClient.SqlParameter("@p"+i, System.Data.SqlDbType.NVarChar, 4000);
				p.Value = Text.Substring(1,Text.Length-2);
				this.querySpec.parameters.AddFirst(p);
				Text = "@p"+(i++);
		 break;
		}
	}
	private void NUMBER_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 35: 
				var p = new System.Data.SqlClient.SqlParameter("@p"+i, System.Data.SqlDbType.Int);
				p.Value = System.Convert.ToInt32(Text);
				this.querySpec.parameters.AddFirst(p);
				Text = "@p"+(i++); 
		 break;
		}
	}
	private void PROPERTY_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 36:  this.tableSpec.HasColumn(Text); break;
		}
	}

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\v\x158\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x5\x2U\n\x2\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x5\x3\x106\n\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3"+
		"\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6"+
		"\x6\x6\x132\n\x6\r\x6\xE\x6\x133\x3\x6\x3\x6\x3\a\x3\a\a\a\x13A\n\a\f"+
		"\a\xE\a\x13D\v\a\x3\a\x3\a\x3\a\x3\b\x3\b\a\b\x144\n\b\f\b\xE\b\x147\v"+
		"\b\x3\b\x3\b\x3\t\x3\t\a\t\x14D\n\t\f\t\xE\t\x150\v\t\x3\t\x3\t\x3\n\x6"+
		"\n\x155\n\n\r\n\xE\n\x156\x3\x13B\x2\x2\v\x3\x2\x3\x5\x2\x4\a\x2\x5\t"+
		"\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x3\x2\t\x5\x2\v\f\xF\xF"+
		"\"\"\x3\x2))\x3\x2\x33;\x3\x2\x32;\x6\x2%%\x42\\\x61\x61\x63|\a\x2%%\x32"+
		";\x42\\\x61\x61\x63|\x5\x2$$*+\x30\x30\x17A\x2\x3\x3\x2\x2\x2\x2\x5\x3"+
		"\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2"+
		"\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x3T\x3"+
		"\x2\x2\x2\x5\x105\x3\x2\x2\x2\a\x107\x3\x2\x2\x2\t\x124\x3\x2\x2\x2\v"+
		"\x131\x3\x2\x2\x2\r\x137\x3\x2\x2\x2\xF\x141\x3\x2\x2\x2\x11\x14A\x3\x2"+
		"\x2\x2\x13\x154\x3\x2\x2\x2\x15\x16\ag\x2\x2\x16\x17\as\x2\x2\x17\x18"+
		"\x3\x2\x2\x2\x18U\b\x2\x2\x2\x19\x1A\ap\x2\x2\x1A\x1B\ag\x2\x2\x1B\x1C"+
		"\x3\x2\x2\x2\x1CU\b\x2\x3\x2\x1D\x1E\ai\x2\x2\x1E\x1F\av\x2\x2\x1F \x3"+
		"\x2\x2\x2 U\b\x2\x4\x2!\"\ai\x2\x2\"#\ag\x2\x2#$\x3\x2\x2\x2$U\b\x2\x5"+
		"\x2%&\an\x2\x2&\'\av\x2\x2\'(\x3\x2\x2\x2(U\b\x2\x6\x2)*\an\x2\x2*+\a"+
		"g\x2\x2+,\x3\x2\x2\x2,U\b\x2\a\x2-.\a\x63\x2\x2./\a\x66\x2\x2/\x30\a\x66"+
		"\x2\x2\x30\x31\x3\x2\x2\x2\x31U\b\x2\b\x2\x32\x33\au\x2\x2\x33\x34\aw"+
		"\x2\x2\x34\x35\a\x64\x2\x2\x35\x36\x3\x2\x2\x2\x36U\b\x2\t\x2\x37\x38"+
		"\ao\x2\x2\x38\x39\aw\x2\x2\x39:\an\x2\x2:;\x3\x2\x2\x2;U\b\x2\n\x2<=\a"+
		"\x66\x2\x2=>\ak\x2\x2>?\ax\x2\x2?@\x3\x2\x2\x2@U\b\x2\v\x2\x41\x42\ao"+
		"\x2\x2\x42\x43\aq\x2\x2\x43\x44\a\x66\x2\x2\x44\x45\x3\x2\x2\x2\x45U\b"+
		"\x2\f\x2\x46G\a\x63\x2\x2GH\ap\x2\x2HI\a\x66\x2\x2IJ\x3\x2\x2\x2JU\b\x2"+
		"\r\x2KL\aq\x2\x2LM\at\x2\x2MN\x3\x2\x2\x2NU\b\x2\xE\x2OP\ap\x2\x2PQ\a"+
		"q\x2\x2QR\av\x2\x2RS\x3\x2\x2\x2SU\b\x2\xF\x2T\x15\x3\x2\x2\x2T\x19\x3"+
		"\x2\x2\x2T\x1D\x3\x2\x2\x2T!\x3\x2\x2\x2T%\x3\x2\x2\x2T)\x3\x2\x2\x2T"+
		"-\x3\x2\x2\x2T\x32\x3\x2\x2\x2T\x37\x3\x2\x2\x2T<\x3\x2\x2\x2T\x41\x3"+
		"\x2\x2\x2T\x46\x3\x2\x2\x2TK\x3\x2\x2\x2TO\x3\x2\x2\x2U\x4\x3\x2\x2\x2"+
		"VW\a\x65\x2\x2WX\aq\x2\x2XY\ap\x2\x2YZ\av\x2\x2Z[\a\x63\x2\x2[\\\ak\x2"+
		"\x2\\]\ap\x2\x2]^\au\x2\x2^_\a*\x2\x2_`\x3\x2\x2\x2`\x106\b\x3\x10\x2"+
		"\x61\x62\ag\x2\x2\x62\x63\ap\x2\x2\x63\x64\a\x66\x2\x2\x64\x65\au\x2\x2"+
		"\x65\x66\ay\x2\x2\x66g\ak\x2\x2gh\av\x2\x2hi\aj\x2\x2ij\a*\x2\x2jk\x3"+
		"\x2\x2\x2k\x106\b\x3\x11\x2lm\ak\x2\x2mn\ap\x2\x2no\a\x66\x2\x2op\ag\x2"+
		"\x2pq\az\x2\x2qr\aq\x2\x2rs\ah\x2\x2st\a*\x2\x2tu\x3\x2\x2\x2u\x106\b"+
		"\x3\x12\x2vw\an\x2\x2wx\ag\x2\x2xy\ap\x2\x2yz\ai\x2\x2z{\av\x2\x2{|\a"+
		"j\x2\x2|}\a*\x2\x2}~\x3\x2\x2\x2~\x106\b\x3\x13\x2\x7F\x80\au\x2\x2\x80"+
		"\x81\av\x2\x2\x81\x82\a\x63\x2\x2\x82\x83\at\x2\x2\x83\x84\av\x2\x2\x84"+
		"\x85\au\x2\x2\x85\x86\ay\x2\x2\x86\x87\ak\x2\x2\x87\x88\av\x2\x2\x88\x89"+
		"\aj\x2\x2\x89\x8A\a*\x2\x2\x8A\x8B\x3\x2\x2\x2\x8B\x106\b\x3\x14\x2\x8C"+
		"\x8D\av\x2\x2\x8D\x8E\aq\x2\x2\x8E\x8F\an\x2\x2\x8F\x90\aq\x2\x2\x90\x91"+
		"\ay\x2\x2\x91\x92\ag\x2\x2\x92\x93\at\x2\x2\x93\x94\a*\x2\x2\x94\x95\x3"+
		"\x2\x2\x2\x95\x106\b\x3\x15\x2\x96\x97\av\x2\x2\x97\x98\aq\x2\x2\x98\x99"+
		"\aw\x2\x2\x99\x9A\ar\x2\x2\x9A\x9B\ag\x2\x2\x9B\x9C\at\x2\x2\x9C\x9D\a"+
		"*\x2\x2\x9D\x9E\x3\x2\x2\x2\x9E\x106\b\x3\x16\x2\x9F\xA0\av\x2\x2\xA0"+
		"\xA1\at\x2\x2\xA1\xA2\ak\x2\x2\xA2\xA3\ao\x2\x2\xA3\xA4\a*\x2\x2\xA4\xA5"+
		"\x3\x2\x2\x2\xA5\x106\b\x3\x17\x2\xA6\xA7\a{\x2\x2\xA7\xA8\ag\x2\x2\xA8"+
		"\xA9\a\x63\x2\x2\xA9\xAA\at\x2\x2\xAA\xAB\a*\x2\x2\xAB\xAC\x3\x2\x2\x2"+
		"\xAC\x106\b\x3\x18\x2\xAD\xAE\ao\x2\x2\xAE\xAF\aq\x2\x2\xAF\xB0\ap\x2"+
		"\x2\xB0\xB1\av\x2\x2\xB1\xB2\aj\x2\x2\xB2\xB3\a*\x2\x2\xB3\xB4\x3\x2\x2"+
		"\x2\xB4\x106\b\x3\x19\x2\xB5\xB6\a\x66\x2\x2\xB6\xB7\a\x63\x2\x2\xB7\xB8"+
		"\a{\x2\x2\xB8\xB9\a*\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA\x106\b\x3\x1A\x2\xBB"+
		"\xBC\aj\x2\x2\xBC\xBD\aq\x2\x2\xBD\xBE\aw\x2\x2\xBE\xBF\at\x2\x2\xBF\xC0"+
		"\a*\x2\x2\xC0\xC1\x3\x2\x2\x2\xC1\x106\b\x3\x1B\x2\xC2\xC3\ao\x2\x2\xC3"+
		"\xC4\ak\x2\x2\xC4\xC5\ap\x2\x2\xC5\xC6\aw\x2\x2\xC6\xC7\av\x2\x2\xC7\xC8"+
		"\ag\x2\x2\xC8\xC9\a*\x2\x2\xC9\xCA\x3\x2\x2\x2\xCA\x106\b\x3\x1C\x2\xCB"+
		"\xCC\au\x2\x2\xCC\xCD\ag\x2\x2\xCD\xCE\a\x65\x2\x2\xCE\xCF\aq\x2\x2\xCF"+
		"\xD0\ap\x2\x2\xD0\xD1\a\x66\x2\x2\xD1\xD2\a*\x2\x2\xD2\xD3\x3\x2\x2\x2"+
		"\xD3\x106\b\x3\x1D\x2\xD4\xD5\al\x2\x2\xD5\xD6\au\x2\x2\xD6\xD7\aq\x2"+
		"\x2\xD7\xD8\ap\x2\x2\xD8\xD9\a\x61\x2\x2\xD9\xDA\ax\x2\x2\xDA\xDB\a\x63"+
		"\x2\x2\xDB\xDC\an\x2\x2\xDC\xDD\aw\x2\x2\xDD\xDE\ag\x2\x2\xDE\xDF\a*\x2"+
		"\x2\xDF\xE0\x3\x2\x2\x2\xE0\x106\b\x3\x1E\x2\xE1\xE2\al\x2\x2\xE2\xE3"+
		"\au\x2\x2\xE3\xE4\aq\x2\x2\xE4\xE5\ap\x2\x2\xE5\xE6\a\x61\x2\x2\xE6\xE7"+
		"\as\x2\x2\xE7\xE8\aw\x2\x2\xE8\xE9\ag\x2\x2\xE9\xEA\at\x2\x2\xEA\xEB\a"+
		"{\x2\x2\xEB\xEC\a*\x2\x2\xEC\xED\x3\x2\x2\x2\xED\x106\b\x3\x1F\x2\xEE"+
		"\xEF\al\x2\x2\xEF\xF0\au\x2\x2\xF0\xF1\aq\x2\x2\xF1\xF2\ap\x2\x2\xF2\xF3"+
		"\a\x61\x2\x2\xF3\xF4\ao\x2\x2\xF4\xF5\aq\x2\x2\xF5\xF6\a\x66\x2\x2\xF6"+
		"\xF7\ak\x2\x2\xF7\xF8\ah\x2\x2\xF8\xF9\a{\x2\x2\xF9\xFA\a*\x2\x2\xFA\xFB"+
		"\x3\x2\x2\x2\xFB\x106\b\x3 \x2\xFC\xFD\ak\x2\x2\xFD\xFE\au\x2\x2\xFE\xFF"+
		"\al\x2\x2\xFF\x100\au\x2\x2\x100\x101\aq\x2\x2\x101\x102\ap\x2\x2\x102"+
		"\x103\a*\x2\x2\x103\x104\x3\x2\x2\x2\x104\x106\b\x3!\x2\x105V\x3\x2\x2"+
		"\x2\x105\x61\x3\x2\x2\x2\x105l\x3\x2\x2\x2\x105v\x3\x2\x2\x2\x105\x7F"+
		"\x3\x2\x2\x2\x105\x8C\x3\x2\x2\x2\x105\x96\x3\x2\x2\x2\x105\x9F\x3\x2"+
		"\x2\x2\x105\xA6\x3\x2\x2\x2\x105\xAD\x3\x2\x2\x2\x105\xB5\x3\x2\x2\x2"+
		"\x105\xBB\x3\x2\x2\x2\x105\xC2\x3\x2\x2\x2\x105\xCB\x3\x2\x2\x2\x105\xD4"+
		"\x3\x2\x2\x2\x105\xE1\x3\x2\x2\x2\x105\xEE\x3\x2\x2\x2\x105\xFC\x3\x2"+
		"\x2\x2\x106\x6\x3\x2\x2\x2\x107\x108\a]\x2\x2\x108\x109\a\x61\x2\x2\x109"+
		"\x10A\a\x63\x2\x2\x10A\x10B\a/\x2\x2\x10B\x10C\a|\x2\x2\x10C\x10D\a\x43"+
		"\x2\x2\x10D\x10E\a/\x2\x2\x10E\x10F\a\\\x2\x2\x10F\x110\a_\x2\x2\x110"+
		"\x111\a]\x2\x2\x111\x112\a\x61\x2\x2\x112\x113\a\x63\x2\x2\x113\x114\a"+
		"/\x2\x2\x114\x115\a|\x2\x2\x115\x116\a\x43\x2\x2\x116\x117\a/\x2\x2\x117"+
		"\x118\a\\\x2\x2\x118\x119\a\x32\x2\x2\x119\x11A\a/\x2\x2\x11A\x11B\a;"+
		"\x2\x2\x11B\x11C\a$\x2\x2\x11C\x11D\a\x30\x2\x2\x11D\x11E\a$\x2\x2\x11E"+
		"\x11F\a_\x2\x2\x11F\x120\a,\x2\x2\x120\x121\a*\x2\x2\x121\x122\x3\x2\x2"+
		"\x2\x122\x123\b\x4\"\x2\x123\b\x3\x2\x2\x2\x124\x125\a\x66\x2\x2\x125"+
		"\x126\a\x63\x2\x2\x126\x127\av\x2\x2\x127\x128\ag\x2\x2\x128\x129\av\x2"+
		"\x2\x129\x12A\ak\x2\x2\x12A\x12B\ao\x2\x2\x12B\x12C\ag\x2\x2\x12C\x12D"+
		"\x3\x2\x2\x2\x12D\x12E\x5\r\a\x2\x12E\x12F\b\x5#\x2\x12F\n\x3\x2\x2\x2"+
		"\x130\x132\t\x2\x2\x2\x131\x130\x3\x2\x2\x2\x132\x133\x3\x2\x2\x2\x133"+
		"\x131\x3\x2\x2\x2\x133\x134\x3\x2\x2\x2\x134\x135\x3\x2\x2\x2\x135\x136"+
		"\b\x6$\x2\x136\f\x3\x2\x2\x2\x137\x13B\t\x3\x2\x2\x138\x13A\v\x2\x2\x2"+
		"\x139\x138\x3\x2\x2\x2\x13A\x13D\x3\x2\x2\x2\x13B\x13C\x3\x2\x2\x2\x13B"+
		"\x139\x3\x2\x2\x2\x13C\x13E\x3\x2\x2\x2\x13D\x13B\x3\x2\x2\x2\x13E\x13F"+
		"\t\x3\x2\x2\x13F\x140\b\a%\x2\x140\xE\x3\x2\x2\x2\x141\x145\t\x4\x2\x2"+
		"\x142\x144\t\x5\x2\x2\x143\x142\x3\x2\x2\x2\x144\x147\x3\x2\x2\x2\x145"+
		"\x143\x3\x2\x2\x2\x145\x146\x3\x2\x2\x2\x146\x148\x3\x2\x2\x2\x147\x145"+
		"\x3\x2\x2\x2\x148\x149\b\b&\x2\x149\x10\x3\x2\x2\x2\x14A\x14E\t\x6\x2"+
		"\x2\x14B\x14D\t\a\x2\x2\x14C\x14B\x3\x2\x2\x2\x14D\x150\x3\x2\x2\x2\x14E"+
		"\x14C\x3\x2\x2\x2\x14E\x14F\x3\x2\x2\x2\x14F\x151\x3\x2\x2\x2\x150\x14E"+
		"\x3\x2\x2\x2\x151\x152\b\t\'\x2\x152\x12\x3\x2\x2\x2\x153\x155\t\b\x2"+
		"\x2\x154\x153\x3\x2\x2\x2\x155\x156\x3\x2\x2\x2\x156\x154\x3\x2\x2\x2"+
		"\x156\x157\x3\x2\x2\x2\x157\x14\x3\x2\x2\x2\n\x2T\x105\x133\x13B\x145"+
		"\x14E\x156(\x3\x2\x2\x3\x2\x3\x3\x2\x4\x3\x2\x5\x3\x2\x6\x3\x2\a\x3\x2"+
		"\b\x3\x2\t\x3\x2\n\x3\x2\v\x3\x2\f\x3\x2\r\x3\x2\xE\x3\x2\xF\x3\x3\x10"+
		"\x3\x3\x11\x3\x3\x12\x3\x3\x13\x3\x3\x14\x3\x3\x15\x3\x3\x16\x3\x3\x17"+
		"\x3\x3\x18\x3\x3\x19\x3\x3\x1A\x3\x3\x1B\x3\x3\x1C\x3\x3\x1D\x3\x3\x1E"+
		"\x3\x3\x1F\x3\x3 \x3\x3!\x3\x4\"\x3\x5#\b\x2\x2\x3\a$\x3\b%\x3\t&";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
