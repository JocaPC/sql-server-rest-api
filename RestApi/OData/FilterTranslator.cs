//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FilterTranslator.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class FilterTranslator : Lexer {
	public const int
		OPERATOR=1, LITERAL=2, FUNCTION=3, UNSUPPORTEDFUNCTION=4, DATETIME_LITERAL=5, 
		WS=6, STRING_LITERAL=7, NUMBER=8, PROPERTY=9, TEXT=10;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"OPERATOR", "LITERAL", "FUNCTION", "UNSUPPORTEDFUNCTION", "DATETIME_LITERAL", 
		"WS", "STRING_LITERAL", "NUMBER", "PROPERTY", "TEXT"
	};


	    SqlServerRestApi.TableSpec tableSpec;
		SqlServerRestApi.QuerySpec querySpec;
		string odataHelperSqlSchema;
		int i = 0;
		public FilterTranslator(ICharStream input,
								SqlServerRestApi.TableSpec tableSpec,
								SqlServerRestApi.QuerySpec querySpec,
								string odataHelperSqlSchema = "odata"): base(input) 
		{
			this.tableSpec = tableSpec;
			this.querySpec = querySpec;
			this.odataHelperSqlSchema = odataHelperSqlSchema;
			this.querySpec.parameters = new System.Collections.Generic.LinkedList<System.Data.SqlClient.SqlParameter>();
			_interp = new LexerATNSimulator(this,_ATN);
		}


	public FilterTranslator(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, "'[_a-zA-Z][_a-zA-Z0-9\".\"]*('"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OPERATOR", "LITERAL", "FUNCTION", "UNSUPPORTEDFUNCTION", "DATETIME_LITERAL", 
		"WS", "STRING_LITERAL", "NUMBER", "PROPERTY", "TEXT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FilterTranslator.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 0 : OPERATOR_action(_localctx, actionIndex); break;

		case 1 : LITERAL_action(_localctx, actionIndex); break;

		case 2 : FUNCTION_action(_localctx, actionIndex); break;

		case 3 : UNSUPPORTEDFUNCTION_action(_localctx, actionIndex); break;

		case 4 : DATETIME_LITERAL_action(_localctx, actionIndex); break;

		case 6 : STRING_LITERAL_action(_localctx, actionIndex); break;

		case 7 : NUMBER_action(_localctx, actionIndex); break;

		case 8 : PROPERTY_action(_localctx, actionIndex); break;
		}
	}
	private void OPERATOR_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:  Text = "=";  break;

		case 1:  Text = "<>";  break;

		case 2:  Text = ">";  break;

		case 3:  Text = ">=";  break;

		case 4:  Text = "<";  break;

		case 5:  Text = "<=";  break;

		case 6:  Text = "+";  break;

		case 7:  Text = "-";  break;

		case 8:  Text = "*";  break;

		case 9:  Text = "/";  break;

		case 10:  Text = "%";  break;

		case 11:  Text = " AND ";  break;

		case 12:  Text = " OR ";  break;

		case 13:  Text = " NOT ";  break;
		}
	}
	private void LITERAL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 14:  Text = "1";  break;

		case 15:  Text = "0";  break;
		}
	}
	private void FUNCTION_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 16:  Text = this.odataHelperSqlSchema+".contains(";  break;

		case 17:  Text = this.odataHelperSqlSchema+".endswith(";  break;

		case 18:  Text = this.odataHelperSqlSchema+".indexof(";  break;

		case 19:  Text = this.odataHelperSqlSchema+".substringof(";  break;

		case 20:  Text = "len(";  break;

		case 21:  Text = this.odataHelperSqlSchema+"startswith(";  break;

		case 22:  Text = "lower(";  break;

		case 23:  Text = "lower(";  break;

		case 24:  Text = "TRIM( CHAR(20) FROM ";  break;

		case 25:  Text = "datepart(year,";  break;

		case 26:  Text = "datepart(month,";  break;

		case 27:  Text = "datepart(day,";  break;

		case 28:  Text = "datepart(hour,";  break;

		case 29:  Text = "datepart(minute,";  break;

		case 30:  Text = "datepart(second,";  break;

		case 31:  Text = "json_value(";  break;

		case 32:  Text = "json_query(";  break;

		case 33:  Text = "json_modify(";  break;

		case 34:  Text = "isjson(";  break;

		case 35:  Text = "json_query(";  break;
		}
	}
	private void UNSUPPORTEDFUNCTION_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 36: throw new System.ArgumentException("Unsupported function: " + Text); break;
		}
	}
	private void DATETIME_LITERAL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 37:  

				var p = new System.Data.SqlClient.SqlParameter("@p"+i, System.Data.SqlDbType.DateTimeOffset);
				p.Value = System.DateTime.Parse(Text.Substring(9,Text.Length-10));
				this.querySpec.parameters.AddFirst(p);
				Text = "@p"+(i++);

		 break;
		}
	}
	private void STRING_LITERAL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 38:  
				var p = new System.Data.SqlClient.SqlParameter("@p"+i, System.Data.SqlDbType.NVarChar, 4000);
				p.Value = Text.Substring(1,Text.Length-2);
				this.querySpec.parameters.AddFirst(p);
				Text = "@p"+(i++);
		 break;
		}
	}
	private void NUMBER_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 39: 
				var p = new System.Data.SqlClient.SqlParameter("@p"+i, System.Data.SqlDbType.Int);
				p.Value = System.Convert.ToInt32(Text);
				this.querySpec.parameters.AddFirst(p);
				Text = "@p"+(i++); 
		 break;
		}
	}
	private void PROPERTY_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 40:  this.tableSpec.HasColumn(Text); break;
		}
	}

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\f\x183\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x5\x2W\n"+
		"\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x5\x3\x66\n\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x5\x4\x131"+
		"\n\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6"+
		"\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x6\a\x15D\n\a\r\a\xE\a"+
		"\x15E\x3\a\x3\a\x3\b\x3\b\a\b\x165\n\b\f\b\xE\b\x168\v\b\x3\b\x3\b\x3"+
		"\b\x3\t\x3\t\a\t\x16F\n\t\f\t\xE\t\x172\v\t\x3\t\x3\t\x3\n\x3\n\a\n\x178"+
		"\n\n\f\n\xE\n\x17B\v\n\x3\n\x3\n\x3\v\x6\v\x180\n\v\r\v\xE\v\x181\x3\x166"+
		"\x2\x2\f\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2"+
		"\n\x13\x2\v\x15\x2\f\x3\x2\t\x5\x2\v\f\xF\xF\"\"\x3\x2))\x3\x2\x33;\x3"+
		"\x2\x32;\x6\x2%%\x42\\\x61\x61\x63|\a\x2%%\x32;\x42\\\x61\x61\x63|\x5"+
		"\x2$$*+\x30\x30\x1A8\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2"+
		"\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2"+
		"\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x3V\x3\x2"+
		"\x2\x2\x5\x65\x3\x2\x2\x2\a\x130\x3\x2\x2\x2\t\x132\x3\x2\x2\x2\v\x14F"+
		"\x3\x2\x2\x2\r\x15C\x3\x2\x2\x2\xF\x162\x3\x2\x2\x2\x11\x16C\x3\x2\x2"+
		"\x2\x13\x175\x3\x2\x2\x2\x15\x17F\x3\x2\x2\x2\x17\x18\ag\x2\x2\x18\x19"+
		"\as\x2\x2\x19\x1A\x3\x2\x2\x2\x1AW\b\x2\x2\x2\x1B\x1C\ap\x2\x2\x1C\x1D"+
		"\ag\x2\x2\x1D\x1E\x3\x2\x2\x2\x1EW\b\x2\x3\x2\x1F \ai\x2\x2 !\av\x2\x2"+
		"!\"\x3\x2\x2\x2\"W\b\x2\x4\x2#$\ai\x2\x2$%\ag\x2\x2%&\x3\x2\x2\x2&W\b"+
		"\x2\x5\x2\'(\an\x2\x2()\av\x2\x2)*\x3\x2\x2\x2*W\b\x2\x6\x2+,\an\x2\x2"+
		",-\ag\x2\x2-.\x3\x2\x2\x2.W\b\x2\a\x2/\x30\a\x63\x2\x2\x30\x31\a\x66\x2"+
		"\x2\x31\x32\a\x66\x2\x2\x32\x33\x3\x2\x2\x2\x33W\b\x2\b\x2\x34\x35\au"+
		"\x2\x2\x35\x36\aw\x2\x2\x36\x37\a\x64\x2\x2\x37\x38\x3\x2\x2\x2\x38W\b"+
		"\x2\t\x2\x39:\ao\x2\x2:;\aw\x2\x2;<\an\x2\x2<=\x3\x2\x2\x2=W\b\x2\n\x2"+
		">?\a\x66\x2\x2?@\ak\x2\x2@\x41\ax\x2\x2\x41\x42\x3\x2\x2\x2\x42W\b\x2"+
		"\v\x2\x43\x44\ao\x2\x2\x44\x45\aq\x2\x2\x45\x46\a\x66\x2\x2\x46G\x3\x2"+
		"\x2\x2GW\b\x2\f\x2HI\a\x63\x2\x2IJ\ap\x2\x2JK\a\x66\x2\x2KL\x3\x2\x2\x2"+
		"LW\b\x2\r\x2MN\aq\x2\x2NO\at\x2\x2OP\x3\x2\x2\x2PW\b\x2\xE\x2QR\ap\x2"+
		"\x2RS\aq\x2\x2ST\av\x2\x2TU\x3\x2\x2\x2UW\b\x2\xF\x2V\x17\x3\x2\x2\x2"+
		"V\x1B\x3\x2\x2\x2V\x1F\x3\x2\x2\x2V#\x3\x2\x2\x2V\'\x3\x2\x2\x2V+\x3\x2"+
		"\x2\x2V/\x3\x2\x2\x2V\x34\x3\x2\x2\x2V\x39\x3\x2\x2\x2V>\x3\x2\x2\x2V"+
		"\x43\x3\x2\x2\x2VH\x3\x2\x2\x2VM\x3\x2\x2\x2VQ\x3\x2\x2\x2W\x4\x3\x2\x2"+
		"\x2XY\av\x2\x2YZ\at\x2\x2Z[\aw\x2\x2[\\\ag\x2\x2\\]\x3\x2\x2\x2]\x66\b"+
		"\x3\x10\x2^_\ah\x2\x2_`\a\x63\x2\x2`\x61\an\x2\x2\x61\x62\au\x2\x2\x62"+
		"\x63\ag\x2\x2\x63\x64\x3\x2\x2\x2\x64\x66\b\x3\x11\x2\x65X\x3\x2\x2\x2"+
		"\x65^\x3\x2\x2\x2\x66\x6\x3\x2\x2\x2gh\a\x65\x2\x2hi\aq\x2\x2ij\ap\x2"+
		"\x2jk\av\x2\x2kl\a\x63\x2\x2lm\ak\x2\x2mn\ap\x2\x2no\au\x2\x2op\a*\x2"+
		"\x2pq\x3\x2\x2\x2q\x131\b\x4\x12\x2rs\ag\x2\x2st\ap\x2\x2tu\a\x66\x2\x2"+
		"uv\au\x2\x2vw\ay\x2\x2wx\ak\x2\x2xy\av\x2\x2yz\aj\x2\x2z{\a*\x2\x2{|\x3"+
		"\x2\x2\x2|\x131\b\x4\x13\x2}~\ak\x2\x2~\x7F\ap\x2\x2\x7F\x80\a\x66\x2"+
		"\x2\x80\x81\ag\x2\x2\x81\x82\az\x2\x2\x82\x83\aq\x2\x2\x83\x84\ah\x2\x2"+
		"\x84\x85\a*\x2\x2\x85\x86\x3\x2\x2\x2\x86\x131\b\x4\x14\x2\x87\x88\au"+
		"\x2\x2\x88\x89\aw\x2\x2\x89\x8A\a\x64\x2\x2\x8A\x8B\au\x2\x2\x8B\x8C\a"+
		"v\x2\x2\x8C\x8D\at\x2\x2\x8D\x8E\ak\x2\x2\x8E\x8F\ap\x2\x2\x8F\x90\ai"+
		"\x2\x2\x90\x91\aq\x2\x2\x91\x92\ah\x2\x2\x92\x93\a*\x2\x2\x93\x94\x3\x2"+
		"\x2\x2\x94\x131\b\x4\x15\x2\x95\x96\an\x2\x2\x96\x97\ag\x2\x2\x97\x98"+
		"\ap\x2\x2\x98\x99\ai\x2\x2\x99\x9A\av\x2\x2\x9A\x9B\aj\x2\x2\x9B\x9C\a"+
		"*\x2\x2\x9C\x9D\x3\x2\x2\x2\x9D\x131\b\x4\x16\x2\x9E\x9F\au\x2\x2\x9F"+
		"\xA0\av\x2\x2\xA0\xA1\a\x63\x2\x2\xA1\xA2\at\x2\x2\xA2\xA3\av\x2\x2\xA3"+
		"\xA4\au\x2\x2\xA4\xA5\ay\x2\x2\xA5\xA6\ak\x2\x2\xA6\xA7\av\x2\x2\xA7\xA8"+
		"\aj\x2\x2\xA8\xA9\a*\x2\x2\xA9\xAA\x3\x2\x2\x2\xAA\x131\b\x4\x17\x2\xAB"+
		"\xAC\av\x2\x2\xAC\xAD\aq\x2\x2\xAD\xAE\an\x2\x2\xAE\xAF\aq\x2\x2\xAF\xB0"+
		"\ay\x2\x2\xB0\xB1\ag\x2\x2\xB1\xB2\at\x2\x2\xB2\xB3\a*\x2\x2\xB3\xB4\x3"+
		"\x2\x2\x2\xB4\x131\b\x4\x18\x2\xB5\xB6\av\x2\x2\xB6\xB7\aq\x2\x2\xB7\xB8"+
		"\aw\x2\x2\xB8\xB9\ar\x2\x2\xB9\xBA\ag\x2\x2\xBA\xBB\at\x2\x2\xBB\xBC\a"+
		"*\x2\x2\xBC\xBD\x3\x2\x2\x2\xBD\x131\b\x4\x19\x2\xBE\xBF\av\x2\x2\xBF"+
		"\xC0\at\x2\x2\xC0\xC1\ak\x2\x2\xC1\xC2\ao\x2\x2\xC2\xC3\a*\x2\x2\xC3\xC4"+
		"\x3\x2\x2\x2\xC4\x131\b\x4\x1A\x2\xC5\xC6\a{\x2\x2\xC6\xC7\ag\x2\x2\xC7"+
		"\xC8\a\x63\x2\x2\xC8\xC9\at\x2\x2\xC9\xCA\a*\x2\x2\xCA\xCB\x3\x2\x2\x2"+
		"\xCB\x131\b\x4\x1B\x2\xCC\xCD\ao\x2\x2\xCD\xCE\aq\x2\x2\xCE\xCF\ap\x2"+
		"\x2\xCF\xD0\av\x2\x2\xD0\xD1\aj\x2\x2\xD1\xD2\a*\x2\x2\xD2\xD3\x3\x2\x2"+
		"\x2\xD3\x131\b\x4\x1C\x2\xD4\xD5\a\x66\x2\x2\xD5\xD6\a\x63\x2\x2\xD6\xD7"+
		"\a{\x2\x2\xD7\xD8\a*\x2\x2\xD8\xD9\x3\x2\x2\x2\xD9\x131\b\x4\x1D\x2\xDA"+
		"\xDB\aj\x2\x2\xDB\xDC\aq\x2\x2\xDC\xDD\aw\x2\x2\xDD\xDE\at\x2\x2\xDE\xDF"+
		"\a*\x2\x2\xDF\xE0\x3\x2\x2\x2\xE0\x131\b\x4\x1E\x2\xE1\xE2\ao\x2\x2\xE2"+
		"\xE3\ak\x2\x2\xE3\xE4\ap\x2\x2\xE4\xE5\aw\x2\x2\xE5\xE6\av\x2\x2\xE6\xE7"+
		"\ag\x2\x2\xE7\xE8\a*\x2\x2\xE8\xE9\x3\x2\x2\x2\xE9\x131\b\x4\x1F\x2\xEA"+
		"\xEB\au\x2\x2\xEB\xEC\ag\x2\x2\xEC\xED\a\x65\x2\x2\xED\xEE\aq\x2\x2\xEE"+
		"\xEF\ap\x2\x2\xEF\xF0\a\x66\x2\x2\xF0\xF1\a*\x2\x2\xF1\xF2\x3\x2\x2\x2"+
		"\xF2\x131\b\x4 \x2\xF3\xF4\al\x2\x2\xF4\xF5\au\x2\x2\xF5\xF6\aq\x2\x2"+
		"\xF6\xF7\ap\x2\x2\xF7\xF8\a\x61\x2\x2\xF8\xF9\ax\x2\x2\xF9\xFA\a\x63\x2"+
		"\x2\xFA\xFB\an\x2\x2\xFB\xFC\aw\x2\x2\xFC\xFD\ag\x2\x2\xFD\xFE\a*\x2\x2"+
		"\xFE\xFF\x3\x2\x2\x2\xFF\x131\b\x4!\x2\x100\x101\al\x2\x2\x101\x102\a"+
		"u\x2\x2\x102\x103\aq\x2\x2\x103\x104\ap\x2\x2\x104\x105\a\x61\x2\x2\x105"+
		"\x106\as\x2\x2\x106\x107\aw\x2\x2\x107\x108\ag\x2\x2\x108\x109\at\x2\x2"+
		"\x109\x10A\a{\x2\x2\x10A\x10B\a*\x2\x2\x10B\x10C\x3\x2\x2\x2\x10C\x131"+
		"\b\x4\"\x2\x10D\x10E\al\x2\x2\x10E\x10F\au\x2\x2\x10F\x110\aq\x2\x2\x110"+
		"\x111\ap\x2\x2\x111\x112\a\x61\x2\x2\x112\x113\ao\x2\x2\x113\x114\aq\x2"+
		"\x2\x114\x115\a\x66\x2\x2\x115\x116\ak\x2\x2\x116\x117\ah\x2\x2\x117\x118"+
		"\a{\x2\x2\x118\x119\a*\x2\x2\x119\x11A\x3\x2\x2\x2\x11A\x131\b\x4#\x2"+
		"\x11B\x11C\ak\x2\x2\x11C\x11D\au\x2\x2\x11D\x11E\al\x2\x2\x11E\x11F\a"+
		"u\x2\x2\x11F\x120\aq\x2\x2\x120\x121\ap\x2\x2\x121\x122\a*\x2\x2\x122"+
		"\x123\x3\x2\x2\x2\x123\x131\b\x4$\x2\x124\x125\al\x2\x2\x125\x126\au\x2"+
		"\x2\x126\x127\aq\x2\x2\x127\x128\ap\x2\x2\x128\x129\a\x61\x2\x2\x129\x12A"+
		"\a\x65\x2\x2\x12A\x12B\a\x63\x2\x2\x12B\x12C\au\x2\x2\x12C\x12D\av\x2"+
		"\x2\x12D\x12E\a*\x2\x2\x12E\x12F\x3\x2\x2\x2\x12F\x131\b\x4%\x2\x130g"+
		"\x3\x2\x2\x2\x130r\x3\x2\x2\x2\x130}\x3\x2\x2\x2\x130\x87\x3\x2\x2\x2"+
		"\x130\x95\x3\x2\x2\x2\x130\x9E\x3\x2\x2\x2\x130\xAB\x3\x2\x2\x2\x130\xB5"+
		"\x3\x2\x2\x2\x130\xBE\x3\x2\x2\x2\x130\xC5\x3\x2\x2\x2\x130\xCC\x3\x2"+
		"\x2\x2\x130\xD4\x3\x2\x2\x2\x130\xDA\x3\x2\x2\x2\x130\xE1\x3\x2\x2\x2"+
		"\x130\xEA\x3\x2\x2\x2\x130\xF3\x3\x2\x2\x2\x130\x100\x3\x2\x2\x2\x130"+
		"\x10D\x3\x2\x2\x2\x130\x11B\x3\x2\x2\x2\x130\x124\x3\x2\x2\x2\x131\b\x3"+
		"\x2\x2\x2\x132\x133\a]\x2\x2\x133\x134\a\x61\x2\x2\x134\x135\a\x63\x2"+
		"\x2\x135\x136\a/\x2\x2\x136\x137\a|\x2\x2\x137\x138\a\x43\x2\x2\x138\x139"+
		"\a/\x2\x2\x139\x13A\a\\\x2\x2\x13A\x13B\a_\x2\x2\x13B\x13C\a]\x2\x2\x13C"+
		"\x13D\a\x61\x2\x2\x13D\x13E\a\x63\x2\x2\x13E\x13F\a/\x2\x2\x13F\x140\a"+
		"|\x2\x2\x140\x141\a\x43\x2\x2\x141\x142\a/\x2\x2\x142\x143\a\\\x2\x2\x143"+
		"\x144\a\x32\x2\x2\x144\x145\a/\x2\x2\x145\x146\a;\x2\x2\x146\x147\a$\x2"+
		"\x2\x147\x148\a\x30\x2\x2\x148\x149\a$\x2\x2\x149\x14A\a_\x2\x2\x14A\x14B"+
		"\a,\x2\x2\x14B\x14C\a*\x2\x2\x14C\x14D\x3\x2\x2\x2\x14D\x14E\b\x5&\x2"+
		"\x14E\n\x3\x2\x2\x2\x14F\x150\a\x66\x2\x2\x150\x151\a\x63\x2\x2\x151\x152"+
		"\av\x2\x2\x152\x153\ag\x2\x2\x153\x154\av\x2\x2\x154\x155\ak\x2\x2\x155"+
		"\x156\ao\x2\x2\x156\x157\ag\x2\x2\x157\x158\x3\x2\x2\x2\x158\x159\x5\xF"+
		"\b\x2\x159\x15A\b\x6\'\x2\x15A\f\x3\x2\x2\x2\x15B\x15D\t\x2\x2\x2\x15C"+
		"\x15B\x3\x2\x2\x2\x15D\x15E\x3\x2\x2\x2\x15E\x15C\x3\x2\x2\x2\x15E\x15F"+
		"\x3\x2\x2\x2\x15F\x160\x3\x2\x2\x2\x160\x161\b\a(\x2\x161\xE\x3\x2\x2"+
		"\x2\x162\x166\t\x3\x2\x2\x163\x165\v\x2\x2\x2\x164\x163\x3\x2\x2\x2\x165"+
		"\x168\x3\x2\x2\x2\x166\x167\x3\x2\x2\x2\x166\x164\x3\x2\x2\x2\x167\x169"+
		"\x3\x2\x2\x2\x168\x166\x3\x2\x2\x2\x169\x16A\t\x3\x2\x2\x16A\x16B\b\b"+
		")\x2\x16B\x10\x3\x2\x2\x2\x16C\x170\t\x4\x2\x2\x16D\x16F\t\x5\x2\x2\x16E"+
		"\x16D\x3\x2\x2\x2\x16F\x172\x3\x2\x2\x2\x170\x16E\x3\x2\x2\x2\x170\x171"+
		"\x3\x2\x2\x2\x171\x173\x3\x2\x2\x2\x172\x170\x3\x2\x2\x2\x173\x174\b\t"+
		"*\x2\x174\x12\x3\x2\x2\x2\x175\x179\t\x6\x2\x2\x176\x178\t\a\x2\x2\x177"+
		"\x176\x3\x2\x2\x2\x178\x17B\x3\x2\x2\x2\x179\x177\x3\x2\x2\x2\x179\x17A"+
		"\x3\x2\x2\x2\x17A\x17C\x3\x2\x2\x2\x17B\x179\x3\x2\x2\x2\x17C\x17D\b\n"+
		"+\x2\x17D\x14\x3\x2\x2\x2\x17E\x180\t\b\x2\x2\x17F\x17E\x3\x2\x2\x2\x180"+
		"\x181\x3\x2\x2\x2\x181\x17F\x3\x2\x2\x2\x181\x182\x3\x2\x2\x2\x182\x16"+
		"\x3\x2\x2\x2\v\x2V\x65\x130\x15E\x166\x170\x179\x181,\x3\x2\x2\x3\x2\x3"+
		"\x3\x2\x4\x3\x2\x5\x3\x2\x6\x3\x2\a\x3\x2\b\x3\x2\t\x3\x2\n\x3\x2\v\x3"+
		"\x2\f\x3\x2\r\x3\x2\xE\x3\x2\xF\x3\x3\x10\x3\x3\x11\x3\x4\x12\x3\x4\x13"+
		"\x3\x4\x14\x3\x4\x15\x3\x4\x16\x3\x4\x17\x3\x4\x18\x3\x4\x19\x3\x4\x1A"+
		"\x3\x4\x1B\x3\x4\x1C\x3\x4\x1D\x3\x4\x1E\x3\x4\x1F\x3\x4 \x3\x4!\x3\x4"+
		"\"\x3\x4#\x3\x4$\x3\x4%\x3\x5&\x3\x6\'\b\x2\x2\x3\b(\x3\t)\x3\n*";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
